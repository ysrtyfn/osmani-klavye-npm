import React, { useEffect, useId, useRef, useState } from 'react';
import { KaretNevi, alKaretÄ°lkHalini } from '@/osmaniKlavye/merkez/nevler/KaretNevi';
import { MetinTatbikati } from '@/osmaniKlavye/iskele/kalipTatbikatlari/MetinTatbikati';
import { MetinSahasÄ±Muavini } from '@/osmaniKlavye/takdim/muavinler/MetinSahasÄ±Muavini';
import { MetinSahasÄ±Hususiyetleri } from './MetinSahasÄ±Hususiyetleri';
import { Metin, alBoÅŸMetni } from '@/osmaniKlavye/ihtisas/nevler/Metin';
import { cn } from '@/osmaniKlavye/nuve/aletler';

import '../tarz/tarzAhir.css';

const metinTatbikati = new MetinTatbikati();
const { tuÅŸaBasÄ±lÄ±nca, tuÅŸBÄ±rakÄ±lÄ±nca } = MetinSahasÄ±Muavini(metinTatbikati);

export const MetinSahasÄ±: React.FunctionComponent<MetinSahasÄ±Hususiyetleri> = (hususiyetler) => {
    const { className } = hususiyetler;
    const [metin, metniDeÄŸiÅŸtir] = useState<Metin>(alBoÅŸMetni());
    // mevki deÄŸiÅŸmediÄŸinde metnin sonuna gidiyor, yeniden Ã§izmeli
    const [karetÄ°bresi, deÄŸiÅŸtirKaretÄ°bresini] = useState<number>(0);
    const karetMevkisiÄ°masÄ± = useRef<KaretNevi>(alKaretÄ°lkHalini());
    const id_osmaniMetinSahasÄ± = useId();

    useEffect(() => {
        let tuÅŸaBasÄ±lÄ±ncaÃœst = async (hadise: KeyboardEvent) => {
            const metinSahasÄ±: HTMLTextAreaElement = hadise.target as HTMLTextAreaElement;
            const seÃ§iliKÄ±sÄ±mBaÅŸÄ± = metinSahasÄ±.selectionStart;
            const seÃ§iliKÄ±sÄ±mSonu = metinSahasÄ±.selectionEnd;

            const [harfEklenmiÅŸMetin, karetHareketMiktarÄ±] = await tuÅŸaBasÄ±lÄ±nca(
                hadise,
                seÃ§iliKÄ±sÄ±mBaÅŸÄ±,
                seÃ§iliKÄ±sÄ±mSonu
            );

            // CTRL tuÅŸuna basÄ±lÄ±nca harf eklenmiyor ama seÃ§ili kÄ±sÄ±m kaybediliyor, buna mani olmak iÃ§in
            if (karetHareketMiktarÄ± === 0) {
                karetMevkisiÄ°masÄ±.current = {
                    baÅŸMevki: seÃ§iliKÄ±sÄ±mBaÅŸÄ±,
                    sonMevki: seÃ§iliKÄ±sÄ±mSonu
                };
            } else {
                karetMevkisiÄ°masÄ±.current = {
                    baÅŸMevki: seÃ§iliKÄ±sÄ±mBaÅŸÄ± + karetHareketMiktarÄ±,
                    sonMevki: seÃ§iliKÄ±sÄ±mBaÅŸÄ± + karetHareketMiktarÄ±
                };
            }

            deÄŸiÅŸtirKaretÄ°bresini((ibre) => ibre + 1);
            metniDeÄŸiÅŸtir(harfEklenmiÅŸMetin);
        };

        const metinSahasÄ±: HTMLTextAreaElement = document.getElementById(id_osmaniMetinSahasÄ±) as HTMLTextAreaElement;
        metinSahasÄ±.focus();
        metinSahasÄ±.addEventListener('keydown', tuÅŸaBasÄ±lÄ±ncaÃœst, false);
        metinSahasÄ±.addEventListener('keyup', tuÅŸBÄ±rakÄ±lÄ±nca, false);

        return () => {
            metinSahasÄ±.removeEventListener('keydown', tuÅŸaBasÄ±lÄ±ncaÃœst);
            metinSahasÄ±.removeEventListener('keyup', tuÅŸBÄ±rakÄ±lÄ±nca);
        };
    }, [id_osmaniMetinSahasÄ±, metniDeÄŸiÅŸtir, tuÅŸBÄ±rakÄ±lÄ±nca, tuÅŸaBasÄ±lÄ±nca]);

    useEffect(() => {
        const metinSahasÄ±: HTMLTextAreaElement = document.getElementById(id_osmaniMetinSahasÄ±) as HTMLTextAreaElement;

        metinSahasÄ±.focus();
        metinSahasÄ±.setSelectionRange(karetMevkisiÄ°masÄ±.current.baÅŸMevki, karetMevkisiÄ°masÄ±.current.sonMevki);
    }, [id_osmaniMetinSahasÄ±, metin, karetÄ°bresi]);

    return (
        <>
            <label htmlFor={id_osmaniMetinSahasÄ±} className="hidden">
                Osmani Metin:
            </label>
            <textarea
                id={id_osmaniMetinSahasÄ±}
                className={cn('h-full w-full', className)}
                name="metin"
                dir="rtl"
                disabled={false}
                readOnly={false}
                value={metin}
                onChange={(hadise) => {
                    // tuÅŸBasmaya ekledeÄŸimiz prevent default sebebiyle bu metod Ã§aÄŸrÄ±lmÄ±yor, bu sayede karet mevkisi muhafaza ediliyor
                    console.log('ğŸš€ ~ file: MetinSahasÄ±.tsx:65 ~ onChange:', '');
                }}
            />
        </>
    );
};
